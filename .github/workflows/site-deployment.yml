name: Build & Deploy 

on:
  push:
    branches: 
      - master

env:
  NODE_VERSION: 16.14.0
  ## SITE CONFIG
  BASE_URL: '/'
  ## SEO
  SITE_URL: ''
  SITE_TITLE: 'Off the Clock'
  SITE_DESCRIPTION: ''
  OG_IMAGE: ''
  OG_IMAGE_WIDTH: 1200
  OG_IMAGE_HEIGHT: 630
  TWITTER_IMAGE: ''
  TWITTER_USER: ''
  ## BRANDING
  LOGO_PRIMARY: '/img/offtheclock-icon-logo.png'
  LOGO_SECONDARY: '/img/offtheclock-icon-logo.png'
  FAVICON: '/img/offtheclock-favicon.png' 
  BUILD_DIR: ${{ github.workspace }}/dist/*
  APACHE_DIR: '/var/www/offtheclock/'


jobs:
  deploy:
    runs-on:
      - self-hosted
      - offtheclock
    
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        
      - name: Set Enviroment Variables
        run: |
          touch .env
          echo "BASE_URL=${{ env.BASE_URL }}" >> .env
          echo "SITE_URL=${{ env.SITE_URL }}" >> .env
          echo "SITE_TITLE=${{ env.SITE_TITLE }}" >> .env
          echo "SITE_DESCRIPTION=${{ env.SITE_DESCRIPTION }}" >> .env
          echo "OG_IMAGE=${{ env.OG_IMAGE }}" >> .env
          echo "OG_IMAGE_WIDTH=${{ env.OG_IMAGE_WIDTH }}" >> .env
          echo "OG_IMAGE_HEIGHT=${{ env.OG_IMAGE_HEIGHT }}" >> .env
          echo "TWITTER_IMAGE=${{ env.TWITTER_IMAGE }}" >> .env
          echo "TWITTER_USER=${{ env.TWITTER_USER }}" >> .env
          echo "LOGO_PRIMARY=${{ env.LOGO_PRIMARY }}" >> .env
          echo "LOGO_SECONDARY=${{ env.LOGO_SECONDARY }}" >> .env
          echo "FAVICON=${{ env.FAVICON }}" >> .env
          echo "GOOGLE_API_KEY=${{ secrets.GOOGLE_API_KEY }}" >> .env
          echo "GOOGLE_SHEET_ID=${{ secrets.GOOGLE_SHEET_ID }}" >> .env
          echo "GOOGLE_FORM_ID=${{ secrets.GOOGLE_FORM_ID }}" >> .env
          echo "GOOGLE_FIELD_EMAIL=${{ secrets.GOOGLE_FIELD_EMAIL }}" >> .env
          echo "RECAPTCHA_SITE_KEY=${{ secrets.RECAPTCHA_SITE_KEY }}" >> .env
          echo "RECAPTCHA_SECRET_KEY=${{ secrets.RECAPTCHA_SECRET_KEY }}" >> .env

      # - name: Show .env file
      #   run: cat .env

      # - name: Cache Yarn Dependencies
      #   uses: actions/cache@v2
      #   with:
      #     path: ~/.cache/yarn
      #     key: yarn-${{ hashFiles('**/yarn.lock') }}
      #     restore-keys: |
      #       yarn-${{ runner.os }}-
      #       yarn-

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Clean up dist Directory
        run: rm -rf ${{ env.BUILD_DIR }}
      
      - name: Clean up Apache Directory 
        run: sudo rm -rf ${{ env.APACHE_DIR }}/*

      - name: Install Dependencies and Build App
        run: |
          yarn
          yarn generate

      - name: Create Symbolic Link to Apache Directory
        run: |
          sudo ln -s $BUILD_DIR $APACHE_DIR || exit 1
